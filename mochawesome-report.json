{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-10-04T02:21:56.588Z",
    "end": "2023-10-04T02:22:00.724Z",
    "duration": 4136
  },
  "results": [
    {
      "uuid": "55335de9-5c1e-4dab-b411-dfc3214b1c9e",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87c53683-ca28-41d9-a1ef-eff95c4349db",
          "title": "Teste da Funcionalidade Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de produtos",
              "fullTitle": "Teste da Funcionalidade Produtos Deve validar contrato de produtos",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "b8c9a23d-f5b2-4c19-8867-0b70ef6d5709",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Listar Produtos",
              "fullTitle": "Teste da Funcionalidade Produtos Listar Produtos",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: '/produtos'\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(15);\n});",
              "err": {},
              "uuid": "da51d2ab-e3ef-49e1-bc7b-f64bdeab3c81",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar Produto ",
              "fullTitle": "Teste da Funcionalidade Produtos Cadastrar Produto ",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, \"Taylor Swift - Red (Taylor's Version)\", 109, \"CD de áudio\", 250).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "0743e9ad-f192-4757-8931-f33de2deed19",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar Produto Dinamicamente",
              "fullTitle": "Teste da Funcionalidade Produtos Cadastrar Produto Dinamicamente",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProduto(token, produto, 1500, \"Curso online\", 25000).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "52d43f41-9887-4475-b713-750a0878540c",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto já cadastrado",
              "fullTitle": "Teste da Funcionalidade Produtos Deve editar um produto já cadastrado",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/produtos').then(response => {\n  cy.log(response.body.produtos[1].nome);\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${response.body.produtos[1]._id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": `${response.body.produtos[1].nome} ${Math.floor(Math.random() * 2)}`,\n      \"preco\": Math.floor(Math.random() * 500),\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": Math.floor(Math.random() * 1000)\n    }\n  }).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "a31ea2d3-cf8e-47ca-ba68-e7d5799f1e1b",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto cadastrado previamente",
              "fullTitle": "Teste da Funcionalidade Produtos Deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProduto(token, produto, 1500, \"Curso online\", 25000).then(response => {\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${response.body._id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 2000,\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": 381\n    }\n  }).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "80a33422-6e06-4864-ad08-830571296f39",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deletar Produto ",
              "fullTitle": "Teste da Funcionalidade Produtos Deletar Produto ",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, `Produto EBAC ${Math.floor(Math.random() * 100000000)}`, 1500, \"Curso online\", 25000).then(response => {\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${response.body._id}`,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n});",
              "err": {},
              "uuid": "35aed99d-d08c-45d7-bd70-abbe97a7b24e",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8c9a23d-f5b2-4c19-8867-0b70ef6d5709",
            "da51d2ab-e3ef-49e1-bc7b-f64bdeab3c81",
            "0743e9ad-f192-4757-8931-f33de2deed19",
            "52d43f41-9887-4475-b713-750a0878540c",
            "a31ea2d3-cf8e-47ca-ba68-e7d5799f1e1b",
            "80a33422-6e06-4864-ad08-830571296f39",
            "35aed99d-d08c-45d7-bd70-abbe97a7b24e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 522,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "55335de9-5c1e-4dab-b411-dfc3214b1c9e",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "87c53683-ca28-41d9-a1ef-eff95c4349db",
          "title": "Teste da Funcionalidade Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de produtos",
              "fullTitle": "Teste da Funcionalidade Produtos Deve validar contrato de produtos",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "b8c9a23d-f5b2-4c19-8867-0b70ef6d5709",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Listar Produtos",
              "fullTitle": "Teste da Funcionalidade Produtos Listar Produtos",
              "timedOut": null,
              "duration": 56,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: '/produtos'\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(15);\n});",
              "err": {},
              "uuid": "da51d2ab-e3ef-49e1-bc7b-f64bdeab3c81",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar Produto ",
              "fullTitle": "Teste da Funcionalidade Produtos Cadastrar Produto ",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, \"Taylor Swift - Red (Taylor's Version)\", 109, \"CD de áudio\", 250).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "0743e9ad-f192-4757-8931-f33de2deed19",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar Produto Dinamicamente",
              "fullTitle": "Teste da Funcionalidade Produtos Cadastrar Produto Dinamicamente",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProduto(token, produto, 1500, \"Curso online\", 25000).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "52d43f41-9887-4475-b713-750a0878540c",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto já cadastrado",
              "fullTitle": "Teste da Funcionalidade Produtos Deve editar um produto já cadastrado",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/produtos').then(response => {\n  cy.log(response.body.produtos[1].nome);\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${response.body.produtos[1]._id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": `${response.body.produtos[1].nome} ${Math.floor(Math.random() * 2)}`,\n      \"preco\": Math.floor(Math.random() * 500),\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": Math.floor(Math.random() * 1000)\n    }\n  }).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "a31ea2d3-cf8e-47ca-ba68-e7d5799f1e1b",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto cadastrado previamente",
              "fullTitle": "Teste da Funcionalidade Produtos Deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProduto(token, produto, 1500, \"Curso online\", 25000).then(response => {\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${response.body._id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 2000,\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": 381\n    }\n  }).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "80a33422-6e06-4864-ad08-830571296f39",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deletar Produto ",
              "fullTitle": "Teste da Funcionalidade Produtos Deletar Produto ",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, `Produto EBAC ${Math.floor(Math.random() * 100000000)}`, 1500, \"Curso online\", 25000).then(response => {\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${response.body._id}`,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n});",
              "err": {},
              "uuid": "35aed99d-d08c-45d7-bd70-abbe97a7b24e",
              "parentUUID": "87c53683-ca28-41d9-a1ef-eff95c4349db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8c9a23d-f5b2-4c19-8867-0b70ef6d5709",
            "da51d2ab-e3ef-49e1-bc7b-f64bdeab3c81",
            "0743e9ad-f192-4757-8931-f33de2deed19",
            "52d43f41-9887-4475-b713-750a0878540c",
            "a31ea2d3-cf8e-47ca-ba68-e7d5799f1e1b",
            "80a33422-6e06-4864-ad08-830571296f39",
            "35aed99d-d08c-45d7-bd70-abbe97a7b24e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 522,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8ee6cf1f-9fde-4230-8428-79401dadf6e9",
      "title": "",
      "fullFile": "cypress\\e2e\\login.cy.js",
      "file": "cypress\\e2e\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12ce800c-38ed-4b15-9bca-40ef5031d5c9",
          "title": "Login - Teste da API Rest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve fazer login com sucesso",
              "fullTitle": "Login - Teste da API Rest Deve fazer login com sucesso",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'http://localhost:3000/login',\n  body: {\n    \"email\": \"fulano@qa.com\",\n    \"password\": \"teste\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Login realizado com sucesso');\n  cy.log(response.body.authorization);\n});",
              "err": {},
              "uuid": "eff308b5-c064-4375-a54a-eab60ff949f1",
              "parentUUID": "12ce800c-38ed-4b15-9bca-40ef5031d5c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eff308b5-c064-4375-a54a-eab60ff949f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 167,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8ee6cf1f-9fde-4230-8428-79401dadf6e9",
      "title": "",
      "fullFile": "cypress\\e2e\\login.cy.js",
      "file": "cypress\\e2e\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12ce800c-38ed-4b15-9bca-40ef5031d5c9",
          "title": "Login - Teste da API Rest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve fazer login com sucesso",
              "fullTitle": "Login - Teste da API Rest Deve fazer login com sucesso",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'http://localhost:3000/login',\n  body: {\n    \"email\": \"fulano@qa.com\",\n    \"password\": \"teste\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Login realizado com sucesso');\n  cy.log(response.body.authorization);\n});",
              "err": {},
              "uuid": "eff308b5-c064-4375-a54a-eab60ff949f1",
              "parentUUID": "12ce800c-38ed-4b15-9bca-40ef5031d5c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eff308b5-c064-4375-a54a-eab60ff949f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 167,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reporterDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}